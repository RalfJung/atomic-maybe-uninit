env:
  CARGO_INCREMENTAL: '0'
  CARGO_NET_RETRY: '10'
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: '1'
  RUST_TEST_THREADS: '1'
  RUSTDOCFLAGS: -D warnings
  RUSTFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: '10'

aarch64_linux_test_task:
  name: test (aarch64-unknown-linux-gnu)
  env:
    TARGET: aarch64-unknown-linux-gnu
    RUSTDOCFLAGS: -D warnings --cfg weak_memory
    RUSTFLAGS: -D warnings --cfg weak_memory
  arm_container:
    image: rust:latest
  setup_script:
    - rustup toolchain add nightly --component rust-src && rustup default nightly
  test_script:
    - cargo test -vv --workspace --all-features
    - cargo test -vv --workspace --all-features --release
    # Use -Z build-std because the prebuilt libtest seems to be incompatible with LTO, causing miscompilation: https://gist.github.com/taiki-e/9713f8e02e8f9f852ccee8d6f089ec24
    - CARGO_PROFILE_RELEASE_CODEGEN_UNITS=1 CARGO_PROFILE_RELEASE_LTO=fat cargo -Z build-std test -vv --workspace --all-features --release --tests --target $TARGET
    # +lse
    - RUSTFLAGS="$RUSTFLAGS -C target-feature=+lse" RUSTDOCFLAGS="$RUSTDOCFLAGS -C target-feature=+lse" cargo test -vv --workspace --all-features
    - RUSTFLAGS="$RUSTFLAGS -C target-feature=+lse" RUSTDOCFLAGS="$RUSTDOCFLAGS -C target-feature=+lse" cargo test -vv --workspace --all-features --release
    # Use -Z build-std because the prebuilt libtest seems to be incompatible with LTO, causing miscompilation: https://gist.github.com/taiki-e/9713f8e02e8f9f852ccee8d6f089ec24
    - RUSTFLAGS="$RUSTFLAGS -C target-feature=+lse" RUSTDOCFLAGS="$RUSTDOCFLAGS -C target-feature=+lse" CARGO_PROFILE_RELEASE_CODEGEN_UNITS=1 CARGO_PROFILE_RELEASE_LTO=fat cargo -Z build-std test -vv --workspace --all-features --release --tests --target $TARGET
    # TODO: lse2 is not available on Graviton2 (armv8.2-a)

aarch64_macos_test_task:
  name: test (aarch64-apple-darwin)
  env:
    TARGET: aarch64-apple-darwin
    RUSTDOCFLAGS: -D warnings --cfg weak_memory
    RUSTFLAGS: -D warnings --cfg weak_memory
  macos_instance:
    image: ghcr.io/cirruslabs/macos-monterey-xcode:latest
  setup_script:
    - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal --default-toolchain nightly --component rust-src
  test_script:
    - source $HOME/.cargo/env
    - cargo test -vv --workspace --all-features
    - cargo test -vv --workspace --all-features --release
    # Use -Z build-std because the prebuilt libtest seems to be incompatible with LTO, causing miscompilation: https://gist.github.com/taiki-e/9713f8e02e8f9f852ccee8d6f089ec24
    - CARGO_PROFILE_RELEASE_CODEGEN_UNITS=1 CARGO_PROFILE_RELEASE_LTO=fat cargo -Z build-std test -vv --workspace --all-features --release --tests --target $TARGET

aarch64_linux_valgrind_task:
  name: valgrind (aarch64-unknown-linux-gnu)
  env:
    CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_RUNNER: valgrind -v --error-exitcode=1 --error-limit=no --leak-check=full --show-leak-kinds=all --track-origins=yes
    RUSTDOCFLAGS: -D warnings --cfg valgrind
    RUSTFLAGS: -D warnings --cfg valgrind
    TARGET: aarch64-unknown-linux-gnu
  arm_container:
    image: rust:latest
  setup_script:
    - rustup toolchain add nightly --component rust-src && rustup default nightly
    # libc6-dbg is needed to run Valgrind
    - apt-get -o Acquire::Retries=10 -qq update && apt-get -o Acquire::Retries=10 -o Dpkg::Use-Pty=0 install -y libc6-dbg
    # Valgrind doesn't support ldxp/stxp as of 3.18.1: https://sourceware.org/git/?p=valgrind.git;a=commit;h=530df882b8f60ecacaf2b9b8a719f7ea1c1d1650
    - |
      set -euxo pipefail
      git clone git://sourceware.org/git/valgrind.git
      cd valgrind
      git checkout 530df882b8f60ecacaf2b9b8a719f7ea1c1d1650
      ./autogen.sh
      ./configure
      make -j$(nproc)
      make -j$(nproc) install
      cd ..
      rm -rf valgrind
  test_script:
    # doctests on Valgrind are very slow
    - cargo test -vv --workspace --all-features --tests
    - cargo test -vv --workspace --all-features --release --tests
    # Use -Z build-std because the prebuilt libtest seems to be incompatible with LTO, causing miscompilation: https://gist.github.com/taiki-e/9713f8e02e8f9f852ccee8d6f089ec24
    - CARGO_PROFILE_RELEASE_CODEGEN_UNITS=1 CARGO_PROFILE_RELEASE_LTO=fat cargo -Z build-std test -vv --workspace --all-features --release --tests --target $TARGET
    # +lse
    - RUSTFLAGS="$RUSTFLAGS -C target-feature=+lse" RUSTDOCFLAGS="$RUSTDOCFLAGS -C target-feature=+lse" cargo test -vv --workspace --all-features --tests
    - RUSTFLAGS="$RUSTFLAGS -C target-feature=+lse" RUSTDOCFLAGS="$RUSTDOCFLAGS -C target-feature=+lse" cargo test -vv --workspace --all-features --release --tests
    # Use -Z build-std because the prebuilt libtest seems to be incompatible with LTO, causing miscompilation: https://gist.github.com/taiki-e/9713f8e02e8f9f852ccee8d6f089ec24
    - RUSTFLAGS="$RUSTFLAGS -C target-feature=+lse" RUSTDOCFLAGS="$RUSTDOCFLAGS -C target-feature=+lse" CARGO_PROFILE_RELEASE_CODEGEN_UNITS=1 CARGO_PROFILE_RELEASE_LTO=fat cargo -Z build-std test -vv --workspace --all-features --release --tests --target $TARGET
    # TODO: lse2 is not available on Graviton2 (armv8.2-a)
